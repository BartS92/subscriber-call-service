version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
  subscriber-call-app-ui:
    platform: linux/x86_64
    container_name: subscriber-call-app-ui
    image: subscriber-call-app-ui
    build:
      context: ./subcriber-call-app/subscriber-call-app-ui/ui
      target: production
      dockerfile: Dockerfile-ui
    ports:
      - "3000:3000"
  subscriber-call-app-service:
    platform: linux/x86_64
    depends_on:
      - subscriber-call-app-ui
      - rabbitmq
    healthcheck:
      test: curl http://localhost:8080/ || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    container_name: subscriber-call-app-service
    image: subscriber-call-app-service
    build:
      context: ./subcriber-call-app/subscriber-call-app-service/bff
      dockerfile: ./Dockerfile-bff
    ports:
      - "8080:8080"
    environment:
      - RABBIT_HOST=host.docker.internal
      - RABBIT_PASSWORD=guest
      - RABBIT_PORT=5672
      - RABBIT_USERNAME=guest
      - SUBSCRIBER_CALL_MANAGER_HOST=http://host.docker.internal:8083
  postgres:
    container_name: postgres-test
    image: postgres-test
    build:
      context: ./subcriber-call-manager-service/service
      dockerfile: ./Dockerfile-postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5 
  subcriber-call-manager-service:
    platform: linux/x86_64
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    container_name: subcriber-call-manager-service
    image: subcriber-call-manager-service
    build:
      context: ./subcriber-call-manager-service/service
      dockerfile: ./Dockerfile-service
    ports:
      - "8083:8083"
    environment:
      POSTGRESQL_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/postgres
      POSTGRESQL_USER: postgres
      POSTGRESQL_PASSWORD: postgres
      RABBIT_HOST: host.docker.internal
      RABBIT_PASSWORD: guest
      RABBIT_PORT: 5672
      RABBIT_USERNAME: guest